@page "/users/create"

@using Microsoft.EntityFrameworkCore
@using KageDating.Models
@inject IDbContextFactory<DataContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Create</PageTitle>

<h1>Create</h1>

<h4>User</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <EditForm method="post" Model="User" OnValidSubmit="AddUser" FormName="create" Enhance>
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" />
            <div class="mb-3">
                <label for="firstname" class="form-label">FirstName:</label>
                <InputText id="firstname" @bind-Value="User.FirstName" class="form-control" />
                <ValidationMessage For="() => User.FirstName" class="text-danger" />
            </div>
            <div class="mb-3">
                <label for="lastname" class="form-label">LastName:</label>
                <InputText id="lastname" @bind-Value="User.LastName" class="form-control" />
                <ValidationMessage For="() => User.LastName" class="text-danger" />
            </div>
            <div class="mb-3">
                <label for="email" class="form-label">Email:</label>
                <InputText id="email" @bind-Value="User.Email" class="form-control" />
                <ValidationMessage For="() => User.Email" class="text-danger" />
            </div>
            <div class="mb-3">
                <label for="username" class="form-label">UserName:</label>
                <InputText id="username" @bind-Value="User.UserName" class="form-control" />
                <ValidationMessage For="() => User.UserName" class="text-danger" />
            </div>
            <div class="mb-3">
                <label for="birthdate" class="form-label">BirthDate:</label>
                <InputDate id="birthdate" @bind-Value="User.BirthDate" class="form-control" />
                <ValidationMessage For="() => User.BirthDate" class="text-danger" />
            </div>
            <div class="mb-3">
                <label for="password" class="form-label">Password:</label>
                <InputText id="password" @bind-Value="User.Password" class="form-control" />
                <ValidationMessage For="() => User.Password" class="text-danger" />
            </div>
            <button type="submit" class="btn btn-primary">Create</button>
        </EditForm>
    </div>
</div>

<div>
    <a href="/users">Back to List</a>
</div>

@code {
    public User User { get; set; } = new User
        {
            BirthDate = DateOnly.FromDateTime(DateTime.Now) // Set the default date to today
        };

    public async Task AddUser()
    {
        using var context = DbFactory.CreateDbContext();
        context.Users.Add(User);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/users");
    }
}
